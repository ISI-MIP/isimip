# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-27 14:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import isi_mip.choiceorotherfield.models


class Migration(migrations.Migration):

    dependencies = [
        ('climatemodels', '0024_auto_20160518_1004'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='impactmodel',
            name='comments',
        ),
        migrations.RemoveField(
            model_name='impactmodel',
            name='spatial_aggregation',
        ),
        migrations.RemoveField(
            model_name='waterglobal',
            name='methods_evapotraspiration',
        ),
        migrations.RemoveField(
            model_name='waterregional',
            name='methods_evapotraspiration',
        ),
        migrations.AddField(
            model_name='waterglobal',
            name='methods_evapotranspiration',
            field=models.TextField(blank=True, null=True, verbose_name='Potential evapotranspiration'),
        ),
        migrations.AddField(
            model_name='waterregional',
            name='methods_evapotranspiration',
            field=models.TextField(blank=True, null=True, verbose_name='Potential evapotranspiration'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='co2_effects',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='CO2 Effects'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='crop_phenology',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Crop phenology'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='evapo_transpiration',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Evapo-transpiration'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='land_coverage',
            field=models.TextField(blank=True, null=True, verbose_name='Land cover'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='lead_area_development',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Lead area development'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='light_interception',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Light interception'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='light_utilization',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Light utilization'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='root_distribution_over_depth',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Root distribution over depth'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='soil_CN_modeling',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Soil CN modeling'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='stresses_involved',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Stresses involved'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='type_of_heat_stress',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Type of heat stress'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='type_of_water_stress',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Type of water stress'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='water_dynamics',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Water dynamics'),
        ),
        migrations.AlterField(
            model_name='agriculture',
            name='yield_formation',
            field=models.TextField(blank=True, help_text='Methods for model calibration and validation', null=True, verbose_name='Yield formation'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='co2_effects',
            field=models.TextField(blank=True, null=True, verbose_name='CO2 effects'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='light_utilization',
            field=models.TextField(blank=True, help_text='photosynthesis, RUE-approach?', null=True),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='list_of_pfts',
            field=models.TextField(blank=True, help_text='Provide a list of PFTs using the folllowing format: [pft1_long_name] ([pft1_short_name]); [pft2_long_name] ([pft2_short_name]). Include long name in brackets if no short name is available.', null=True, verbose_name='List of PFTs'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='nbp_fire',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes fire, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Fire'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='nbp_harvest',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes harvest, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool. 1: crops, 2: harvest from forest management, 3: harvest from grassland management.', null=True, verbose_name='Harvest'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='nbp_landuse_change',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes land-use change (e.g. deforestation harvest and otherland-use changes), and how the model accounts for the fluxes, i.e. what is the fate of the biomass? e.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Land-use change'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='output_per_pft',
            field=models.TextField(blank=True, help_text='Is output per PFT per unit area of that PFT, i.e. requiring weighting by the fractional coverage of each PFT to get the gridbox average?', null=True, verbose_name='Output per PFT?'),
        ),
        migrations.AlterField(
            model_name='biomes',
            name='rooting_depth_differences',
            field=models.TextField(blank=True, help_text='Including how it changes', null=True, verbose_name='Differences in rooting depth'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='bioenergy_supply_costs',
            field=models.TextField(blank=True, help_text='Include information on the functional forms and the data sources for deriving the supply curves', null=True, verbose_name='Bioenergy supply costs'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='biomass_types',
            field=models.TextField(blank=True, help_text='1st generation, 2nd generation, residues...', null=True, verbose_name='Biomass types'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='factor_definition_and_calculation',
            field=models.TextField(blank=True, help_text='Are these endogenous or exogenous to the model?', null=True, verbose_name='Definition and calculation of variable potential and load factor'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='maximum_potential_assumption',
            field=models.TextField(blank=True, help_text='Which information source is used?', null=True, verbose_name='Maximum potential assumption'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='response_function_of_energy_demand_to_HDD_CDD',
            field=models.TextField(blank=True, help_text='Including equations where appropriate', null=True, verbose_name='Response function of energy demand to HDD/CDD'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='socioeconomic_input',
            field=models.TextField(blank=True, help_text='Are SSP storylines implemented, or just GDP and population scenarios?', null=True, verbose_name='Socio-economic input'),
        ),
        migrations.AlterField(
            model_name='energy',
            name='variables_not_directly_from_GCMs',
            field=models.TextField(blank=True, help_text='How are these calculated (including equations)?', null=True, verbose_name='Variables not directly from GCMs'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='co2_effects',
            field=models.TextField(blank=True, null=True, verbose_name='CO2 effects'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='light_utilization',
            field=models.TextField(blank=True, help_text='photosynthesis, RUE-approach?', null=True),
        ),
        migrations.AlterField(
            model_name='forests',
            name='list_of_pfts',
            field=models.TextField(blank=True, help_text='Provide a list of PFTs using the folllowing format: [pft1_long_name] ([pft1_short_name]); [pft2_long_name] ([pft2_short_name]). Include long name in brackets if no short name is available.', null=True, verbose_name='List of PFTs'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='nbp_fire',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes fire, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Fire'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='nbp_harvest',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes harvest, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool. 1: crops, 2: harvest from forest management, 3: harvest from grassland management.', null=True, verbose_name='Harvest'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='nbp_landuse_change',
            field=models.TextField(blank=True, help_text='Indicate whether the model includes land-use change (e.g. deforestation harvest and otherland-use changes), and how the model accounts for the fluxes, i.e. what is the fate of the biomass? e.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Land-use change'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='output_per_pft',
            field=models.TextField(blank=True, help_text='Is output per PFT per unit area of that PFT, i.e. requiring weighting by the fractional coverage of each PFT to get the gridbox average?', null=True, verbose_name='Output per PFT?'),
        ),
        migrations.AlterField(
            model_name='forests',
            name='rooting_depth_differences',
            field=models.TextField(blank=True, help_text='Including how it changes', null=True, verbose_name='Differences in rooting depth'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='additional_input_data_sets',
            field=models.TextField(blank=True, help_text='Data sets used to drive the model that were not provided by ISIMIP', null=True, verbose_name='Additional input data sets'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='anything_else',
            field=models.TextField(blank=True, help_text='Anything else necessary to reproduce and/or understand the simulation output', null=True, verbose_name='Additional comments'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='climate_variables',
            field=models.ManyToManyField(blank=True, help_text='Including variables that were derived from those provided in the ISIMIP input data set', to='climatemodels.ClimateVariable', verbose_name='Climate variables'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='exceptions_to_protocol',
            field=models.TextField(blank=True, help_text='Any settings prescribed by the ISIMIP protocol that were overruled when runing the model', null=True, verbose_name='Exceptions'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='extreme_events',
            field=models.TextField(blank=True, help_text='Key challenges for this model in reproducing impacts of extreme events', null=True, verbose_name='Key challenges'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='main_reference_paper',
            field=models.ForeignKey(blank=True, help_text='The single paper that should be cited when referring to simulation output from this model', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_ref', to='climatemodels.ReferencePaper', verbose_name='Reference paper: main reference'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='management',
            field=models.TextField(blank=True, help_text='Specific management and autonomous adaptation measures applied. E.g. varying sowing dates in crop models, dbh-related harvesting in forest models.', null=True),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='natural_vegetation_cover_dataset',
            field=models.TextField(blank=True, help_text='Dataset used if natural vegetation cover is prescribed', null=True),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='natural_vegetation_dynamics',
            field=models.TextField(blank=True, help_text='Description of how natural vegetation is simulated dynamically where relevant', null=True),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='natural_vegetation_partition',
            field=models.TextField(blank=True, help_text='How areas covered by different types of natural vegetation are partitioned', null=True),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='other_references',
            field=models.ManyToManyField(blank=True, help_text='Other papers describing aspects of this model', to='climatemodels.ReferencePaper', verbose_name='Reference paper: other references'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='region',
            field=models.ManyToManyField(help_text='Region for which model produces results', to='climatemodels.Region'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='sector',
            field=models.CharField(choices=[('Agriculture', 'Agriculture'), ('Agro-Economic Modelling', 'Agro-Economic Modelling'), ('Biodiversity', 'Biodiversity'), ('Biomes', 'Biomes'), ('Coastal Infrastructure', 'Coastal Infrastructure'), ('Computable General Equilibrium Modelling', 'Computable General Equilibrium Modelling'), ('Energy', 'Energy'), ('Forests', 'Forests'), ('Health', 'Health'), ('Marine Ecosystems and Fisheries (global)', 'Marine Ecosystems and Fisheries (global)'), ('Marine Ecosystems and Fisheries (regional)', 'Marine Ecosystems and Fisheries (regional)'), ('Permafrost', 'Permafrost'), ('Water (global)', 'Water (global)'), ('Water (regional)', 'Water (regional)')], help_text='The sector to which this information pertains. Some models may have further entries for other sectors.', max_length=500),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='simulation_round',
            field=models.ManyToManyField(blank=True, help_text='The ISIMIP simulation round for which these model details are relevant', to='climatemodels.SimulationRound'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='socioeconomic_input_variables',
            field=models.ManyToManyField(blank=True, help_text='Including resolution where relevant', to='climatemodels.SocioEconomicInputVariables', verbose_name='Socio-economic input variables'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='soil_dataset',
            field=models.TextField(blank=True, help_text='HWSD or GSWP3 were provided', null=True, verbose_name='Soil dataset'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='spin_up',
            field=models.NullBooleanField(choices=[(None, '---------'), (True, 'Yes'), (False, 'No')], help_text="'No' indicates the simulations were run starting in the first reporting year 1971", verbose_name='Was a spin-up performed?'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='spin_up_design',
            field=models.TextField(blank=True, help_text='Including the length of the spin up, the CO2 concentration used, and any deviations from the spin-up procedure defined in the protocol', null=True, verbose_name='Spin-up design'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='temporal_resolution_climate',
            field=isi_mip.choiceorotherfield.models.ChoiceOrOtherField(blank=True, choices=[('daily', 'daily'), ('monthly', 'monthly'), ('annual', 'annual')], help_text='ISIMIP data was provided in daily time steps', max_length=500, null=True, verbose_name='Temporal resolution of input data: climate variables'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='temporal_resolution_co2',
            field=isi_mip.choiceorotherfield.models.ChoiceOrOtherField(blank=True, choices=[('annual', 'annual')], help_text='ISIMIP data was provided in annual time steps', max_length=500, null=True, verbose_name='Temporal resolution of input data: CO2'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='temporal_resolution_land',
            field=isi_mip.choiceorotherfield.models.ChoiceOrOtherField(blank=True, choices=[('annual', 'annual')], help_text='ISIMIP data was provided in annual time steps', max_length=500, null=True, verbose_name='Temporal resolution of input data: land use/land cover'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='temporal_resolution_soil',
            field=isi_mip.choiceorotherfield.models.ChoiceOrOtherField(blank=True, choices=[('constant', 'constant')], help_text='ISIMIP data was fixed over time', max_length=500, null=True, verbose_name='Temporal resolution of input data: soil'),
        ),
        migrations.AlterField(
            model_name='impactmodel',
            name='version',
            field=models.CharField(blank=True, help_text='The model version with which the simulations were run', max_length=500, null=True, verbose_name='Model version'),
        ),
        migrations.AlterField(
            model_name='waterglobal',
            name='dams_reservoirs',
            field=models.TextField(blank=True, help_text='Describe how are dams and reservoirs are implemented', null=True, verbose_name='Dam and reservoir implementation'),
        ),
        migrations.AlterField(
            model_name='waterglobal',
            name='water_use',
            field=models.TextField(blank=True, help_text='Which types of water use are included in the model?', null=True, verbose_name='Water-use types'),
        ),
        migrations.AlterField(
            model_name='waterregional',
            name='dams_reservoirs',
            field=models.TextField(blank=True, help_text='Describe how are dams and reservoirs are implemented', null=True, verbose_name='Dam and reservoir implementation'),
        ),
        migrations.AlterField(
            model_name='waterregional',
            name='water_use',
            field=models.TextField(blank=True, help_text='Which types of water use are included in the model?', null=True, verbose_name='Water-use types'),
        ),
    ]
