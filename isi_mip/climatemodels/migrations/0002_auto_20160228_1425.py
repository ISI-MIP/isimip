# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-28 13:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('climatemodels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarineEcosystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defining_features', models.TextField(blank=True, null=True, verbose_name='Defining features')),
                ('spatial_scale', models.TextField(blank=True, null=True, verbose_name='Spatial scale')),
                ('spatial_resolution', models.TextField(blank=True, null=True, verbose_name='Spatial resolution')),
                ('temporal_scale', models.TextField(blank=True, null=True, verbose_name='Temporal scale')),
                ('temporal_resolution', models.TextField(blank=True, null=True, verbose_name='Temporal resolution')),
                ('taxonomic_scope', models.TextField(blank=True, null=True, verbose_name='Taxonomic scope')),
                ('vertical_resolution', models.TextField(blank=True, null=True, verbose_name='Vertical resolution')),
                ('spatial_dispersal_included', models.TextField(blank=True, null=True, verbose_name='Spatial dispersal included')),
                ('fishbase_used_for_mass_length_conversion', models.TextField(blank=True, null=True, verbose_name='FishBase used for mass-length conversion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.RenameModel(
            old_name='AgroEconomicModelling',
            new_name='Biodiversity',
        ),
        migrations.AddField(
            model_name='agriculture',
            name='calibrated_values',
            field=models.TextField(blank=True, null=True, verbose_name='Calibrated values'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='co2_effects',
            field=models.TextField(blank=True, null=True, verbose_name='CO2 Effects'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='criteria_for_evaluation',
            field=models.TextField(blank=True, null=True, verbose_name='Criteria for evaluation (validation)'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='crop_cultivars',
            field=models.TextField(blank=True, null=True, verbose_name='Crop cultivars'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='crop_phenology',
            field=models.TextField(blank=True, null=True, verbose_name='Crop phenology'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='crop_residue',
            field=models.TextField(blank=True, null=True, verbose_name='Crop residue'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='crops',
            field=models.TextField(blank=True, null=True, verbose_name='Crops'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='evapo_transpiration',
            field=models.TextField(blank=True, null=True, verbose_name='Evapo-transpiration'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='fertilizer_application',
            field=models.TextField(blank=True, null=True, verbose_name='Fertilizer application'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='initial_crop_residue',
            field=models.TextField(blank=True, null=True, verbose_name='Initial crop residue'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='initial_soil_C_and_OM',
            field=models.TextField(blank=True, null=True, verbose_name='Initial soil C and OM'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='initial_soil_nitrate_and_ammonia',
            field=models.TextField(blank=True, null=True, verbose_name='Initial soil nitrate and ammonia'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='initial_soil_water',
            field=models.TextField(blank=True, null=True, verbose_name='Initial soil water'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='irrigation',
            field=models.TextField(blank=True, null=True, verbose_name='Irrigation'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='land_coverage',
            field=models.TextField(blank=True, null=True, verbose_name='Land coverage'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='lead_area_development',
            field=models.TextField(blank=True, null=True, verbose_name='Lead area development'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='light_interception',
            field=models.TextField(blank=True, null=True, verbose_name='Light interception'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='light_utilization',
            field=models.TextField(blank=True, null=True, verbose_name='Light utilization'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='output_variable_and_dataset',
            field=models.TextField(blank=True, null=True, verbose_name='Output variable and dataset for calibration validation'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='parameters_number_and_description',
            field=models.TextField(blank=True, null=True, verbose_name='Parameters, number and description'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='planting_date_decision',
            field=models.TextField(blank=True, null=True, verbose_name='Planting date decision'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='planting_density',
            field=models.TextField(blank=True, null=True, verbose_name='Planting density'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='root_distribution_over_depth',
            field=models.TextField(blank=True, null=True, verbose_name='Root distribution over depth'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='soil_CN_modeling',
            field=models.TextField(blank=True, null=True, verbose_name='Soil CN modeling'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='spatial_scale_of_calibration_validation',
            field=models.TextField(blank=True, null=True, verbose_name='Spatial scale of calibration/validation'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='stresses_involved',
            field=models.TextField(blank=True, null=True, verbose_name='Stresses involved'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='temporal_scale_of_calibration_validation',
            field=models.TextField(blank=True, null=True, verbose_name='Temporal scale of calibration/validation'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='type_of_heat_stress',
            field=models.TextField(blank=True, null=True, verbose_name='Type of heat stress'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='type_of_water_stress',
            field=models.TextField(blank=True, null=True, verbose_name='Type of water stress'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='water_dynamics',
            field=models.TextField(blank=True, null=True, verbose_name='Water dynamics'),
        ),
        migrations.AddField(
            model_name='agriculture',
            name='yield_formation',
            field=models.TextField(blank=True, null=True, verbose_name='Yield formation'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='closed_energy_balance',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='co2_effects',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='considerations',
            field=models.TextField(blank=True, help_text='Things to consider, when calculating basic variables such as GPP, NPP, RA, RH from your modeling', null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='dynamic_vegetation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='evapotranspiration_approaches',
            field=models.TextField(blank=True, null=True, verbose_name='Evapo-transpiration approaches'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='heat_stress',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='latent_heat',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='light_interception',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='light_utilization',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='list_of_pfts',
            field=models.TextField(blank=True, null=True, verbose_name='List of PFTs'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_age',
            field=models.TextField(blank=True, null=True, verbose_name='Age'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_drought',
            field=models.TextField(blank=True, null=True, verbose_name='Drought'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_fire',
            field=models.TextField(blank=True, null=True, verbose_name='Fire'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_insects',
            field=models.TextField(blank=True, null=True, verbose_name='Insects'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_other',
            field=models.TextField(blank=True, null=True, verbose_name='Other'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_remarks',
            field=models.TextField(blank=True, null=True, verbose_name='Remarks'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_stochastic_random_disturbance',
            field=models.TextField(blank=True, null=True, verbose_name='Stochastic random disturbance'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='mortality_storm',
            field=models.TextField(blank=True, null=True, verbose_name='Storm'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nbp_comments',
            field=models.TextField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nbp_fire',
            field=models.TextField(blank=True, null=True, verbose_name='Fire'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nbp_harvest',
            field=models.TextField(blank=True, null=True, verbose_name='Hharvest'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nbp_landuse_change',
            field=models.TextField(blank=True, null=True, verbose_name='Land-use change'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nbp_other',
            field=models.TextField(blank=True, null=True, verbose_name='Other'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='nitrogen_limitation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='output',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='output_per_pft',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='permafrost',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='pfts_comments',
            field=models.TextField(blank=True, null=True, verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='phenology',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='root_distribution',
            field=models.TextField(blank=True, null=True, verbose_name='Root distribution over depth'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='rooting_depth_differences',
            field=models.TextField(blank=True, null=True, verbose_name='Differences in rooting depth'),
        ),
        migrations.AddField(
            model_name='biomes',
            name='sensible_heat',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='soil_moisture_surface_temperature_coupling',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='biomes',
            name='water_stress',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='energy',
            name='bioenergy_supply_costs',
            field=models.TextField(blank=True, null=True, verbose_name='Bioenergy supply costs'),
        ),
        migrations.AddField(
            model_name='energy',
            name='biomass_types',
            field=models.TextField(blank=True, null=True, verbose_name='Biomass types'),
        ),
        migrations.AddField(
            model_name='energy',
            name='data_format_for_input',
            field=models.TextField(blank=True, null=True, verbose_name='Data format for input'),
        ),
        migrations.AddField(
            model_name='energy',
            name='factor_definition_and_calculation',
            field=models.TextField(blank=True, null=True, verbose_name='Definition and calculation of variable potential and load factor'),
        ),
        migrations.AddField(
            model_name='energy',
            name='impact_types_energy_demand',
            field=models.TextField(blank=True, null=True, verbose_name='Energy demand (heat & cooling)'),
        ),
        migrations.AddField(
            model_name='energy',
            name='impact_types_other',
            field=models.TextField(blank=True, null=True, verbose_name='Other (agriculture, infrastructure, adaptation)'),
        ),
        migrations.AddField(
            model_name='energy',
            name='impact_types_temperature_effects_on_thermal_power',
            field=models.TextField(blank=True, null=True, verbose_name='temperature effects on thermal power'),
        ),
        migrations.AddField(
            model_name='energy',
            name='impact_types_water_scarcity_impacts',
            field=models.TextField(blank=True, null=True, verbose_name='Water scarcity impacts'),
        ),
        migrations.AddField(
            model_name='energy',
            name='impact_types_weather_effects_on_renewables',
            field=models.TextField(blank=True, null=True, verbose_name='Weather effects on renewables'),
        ),
        migrations.AddField(
            model_name='energy',
            name='maximum_potential_assumption',
            field=models.TextField(blank=True, null=True, verbose_name='Maximum potential assumption'),
        ),
        migrations.AddField(
            model_name='energy',
            name='model_type',
            field=models.TextField(blank=True, null=True, verbose_name='Model type'),
        ),
        migrations.AddField(
            model_name='energy',
            name='output_economics',
            field=models.TextField(blank=True, null=True, verbose_name='Economics'),
        ),
        migrations.AddField(
            model_name='energy',
            name='output_energy_demand',
            field=models.TextField(blank=True, null=True, verbose_name='Energy demand (heating & cooling)'),
        ),
        migrations.AddField(
            model_name='energy',
            name='output_energy_supply',
            field=models.TextField(blank=True, null=True, verbose_name='Energy supply'),
        ),
        migrations.AddField(
            model_name='energy',
            name='output_other',
            field=models.TextField(blank=True, null=True, verbose_name='Other (agriculture, infrastructure, adaptation)'),
        ),
        migrations.AddField(
            model_name='energy',
            name='output_water_scarcity',
            field=models.TextField(blank=True, null=True, verbose_name='Water scarcity'),
        ),
        migrations.AddField(
            model_name='energy',
            name='response_function_of_energy_demand_to_HDD_CDD',
            field=models.TextField(blank=True, null=True, verbose_name='Response function of energy demand to HDD/CDD'),
        ),
        migrations.AddField(
            model_name='energy',
            name='socioeconomic_input',
            field=models.TextField(blank=True, null=True, verbose_name='Socio-economic input'),
        ),
        migrations.AddField(
            model_name='energy',
            name='temporal_extent',
            field=models.TextField(blank=True, null=True, verbose_name='Temporal extent'),
        ),
        migrations.AddField(
            model_name='energy',
            name='temporal_resolution',
            field=models.TextField(blank=True, null=True, verbose_name='Temporal resolution'),
        ),
        migrations.AddField(
            model_name='energy',
            name='variables_not_directly_from_GCMs',
            field=models.TextField(blank=True, null=True, verbose_name='Variables not directly from GCMs'),
        ),
        migrations.RemoveField(
            model_name='general',
            name='region',
        ),
        migrations.AlterField(
            model_name='water',
            name='calibration_catchments',
            field=models.TextField(blank=True, help_text='How many catchments was the calibration carried out?', null=True),
        ),
        migrations.AddField(
            model_name='marineecosystems',
            name='general',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='climatemodels.General'),
        ),
        migrations.AddField(
            model_name='general',
            name='region',
            field=models.ManyToManyField(to='climatemodels.Region'),
        ),
    ]
