# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2020-10-29 09:38
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('climatemodels', '0105_auto_20200514_1429'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, null=True)),
                ('output', models.TextField(blank=True, default='', help_text='Is output (e.g. PFT cover) written out per grid-cell area or per land and water area within a grid cell, or land only?', null=True, verbose_name='Output format')),
                ('output_per_pft', models.TextField(blank=True, default='', help_text='Is output per PFT per unit area of that PFT, i.e. requiring weighting by the fractional coverage of each PFT to get the gridbox average?', null=True, verbose_name='Output per PFT?')),
                ('considerations', models.TextField(blank=True, default='', help_text='Things to consider, when calculating basic variables such as GPP, NPP, RA, RH from the model.', null=True)),
                ('dynamic_vegetation', models.TextField(blank=True, default='', null=True)),
                ('nitrogen_limitation', models.TextField(blank=True, default='', null=True)),
                ('co2_effects', models.TextField(blank=True, default='', null=True, verbose_name='CO2 effects')),
                ('light_interception', models.TextField(blank=True, default='', null=True)),
                ('light_utilization', models.TextField(blank=True, default='', help_text='photosynthesis, RUE-approach?', null=True)),
                ('phenology', models.TextField(blank=True, default='', null=True)),
                ('water_stress', models.TextField(blank=True, default='', null=True)),
                ('heat_stress', models.TextField(blank=True, default='', null=True)),
                ('evapotranspiration_approach', models.TextField(blank=True, default='', null=True, verbose_name='Evapo-transpiration approach')),
                ('rooting_depth_differences', models.TextField(blank=True, default='', help_text='Including how it changes', null=True, verbose_name='Differences in rooting depth')),
                ('root_distribution', models.TextField(blank=True, default='', null=True, verbose_name='Root distribution over depth')),
                ('permafrost', models.TextField(blank=True, default='', null=True)),
                ('closed_energy_balance', models.TextField(blank=True, default='', null=True)),
                ('soil_moisture_surface_temperature_coupling', models.TextField(blank=True, default='', null=True, verbose_name='Coupling/feedback between soil moisture and surface temperature')),
                ('latent_heat', models.TextField(blank=True, default='', null=True)),
                ('sensible_heat', models.TextField(blank=True, default='', null=True)),
                ('mortality_age', models.TextField(blank=True, default='', null=True, verbose_name='Age/Senescence')),
                ('mortality_fire', models.TextField(blank=True, default='', null=True, verbose_name='Fire')),
                ('mortality_drought', models.TextField(blank=True, default='', null=True, verbose_name='Drought')),
                ('mortality_insects', models.TextField(blank=True, default='', null=True, verbose_name='Insects')),
                ('mortality_storm', models.TextField(blank=True, default='', null=True, verbose_name='Storm')),
                ('mortality_stochastic_random_disturbance', models.TextField(blank=True, default='', null=True, verbose_name='Stochastic random disturbance')),
                ('mortality_other', models.TextField(blank=True, default='', null=True, verbose_name='Other')),
                ('mortality_remarks', models.TextField(blank=True, default='', null=True, verbose_name='Remarks')),
                ('nbp_fire', models.TextField(blank=True, default='', help_text='Indicate whether the model includes fire, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Fire')),
                ('nbp_landuse_change', models.TextField(blank=True, default='', help_text='Indicate whether the model includes land-use change (e.g. deforestation harvest and otherland-use changes), and how the model accounts for the fluxes, i.e. what is the fate of the biomass? e.g. directly to atmsphere or let it go to other pool', null=True, verbose_name='Land-use change')),
                ('nbp_harvest', models.TextField(blank=True, default='', help_text='Indicate whether the model includes harvest, and how the model accounts for the fluxes, i.e. what is the fate of the biomass? E.g. directly to atmsphere or let it go to other pool. 1: crops, 2: harvest from forest management, 3: harvest from grassland management.', null=True, verbose_name='Harvest')),
                ('nbp_other', models.TextField(blank=True, default='', null=True, verbose_name='Other processes')),
                ('nbp_comments', models.TextField(blank=True, default='', null=True, verbose_name='Comments')),
                ('list_of_pfts', models.TextField(blank=True, default='', help_text='Provide a list of PFTs using the folllowing format: [pft1_long_name] ([pft1_short_name]); [pft2_long_name] ([pft2_short_name]). Include long name in brackets if no short name is available.', null=True, verbose_name='List of species / PFTs')),
                ('pfts_comments', models.TextField(blank=True, default='', null=True, verbose_name='Comments')),
                ('compute_soil_carbon', models.TextField(blank=True, default='', null=True, verbose_name='How do you compute soil organic carbon during land use (do you mix the previous PFT SOC into agricultural SOC)?')),
                ('seperate_soil_carbon', models.TextField(blank=True, default='', null=True, verbose_name='Do you separate soil organic carbon in pasture from natural grass?')),
                ('harvest_npp_crops', models.TextField(blank=True, default='', null=True, verbose_name='Do you harvest NPP of crops? Do you including grazing? How does harvested NPP decay?')),
                ('treat_biofuel_npp', models.TextField(blank=True, default='', null=True, verbose_name='How do you to treat biofuel NPP and biofuel harvest?')),
                ('npp_litter_output', models.TextField(blank=True, default='', null=True, verbose_name='Does non-harvested crop NPP go to litter in your output?')),
                ('simulate_bioenergy', models.TextField(blank=True, default='', null=True, verbose_name='How do you simulate bioenergy? I.e. What PFT do you simulate on bioenergy land?')),
                ('transition_cropland', models.TextField(blank=True, default='', null=True, verbose_name='How do you simulate the transition from cropland to bioenergy?')),
                ('simulate_pasture', models.TextField(blank=True, default='', null=True, verbose_name='How do you simulate pasture (which PFT)?')),
                ('main_components_burnt_area', models.TextField(blank=True, default='', null=True, verbose_name='What are the main components of burned area computation?')),
                ('sources_of_ignition', models.TextField(blank=True, default='', null=True, verbose_name='Which sources of ignition are included?')),
                ('fire_ignition_implemented', models.TextField(blank=True, default='', null=True, verbose_name='Is fire ignition implemented as a random process?')),
                ('human_ignition', models.TextField(blank=True, default='', null=True, verbose_name='Is human influence on fire ignition and/or suppression included? How?')),
                ('human_ignition_conditions', models.TextField(blank=True, default='', null=True, verbose_name='If human ignitions are included for which conditions are the ignitions highest/lowest?')),
                ('how_does_fire_spread', models.TextField(blank=True, default='', null=True, verbose_name='How does fire spread?')),
                ('fire_duration_computed', models.TextField(blank=True, default='', null=True, verbose_name='How is fire duration computed?')),
                ('model_compute_fuel_load', models.TextField(blank=True, default='', null=True, verbose_name='How does the model compute fuel load?')),
                ('list_of_fuel_classes', models.TextField(blank=True, default='', null=True, verbose_name='List of fuel classes (full names and abbreviations)')),
                ('fuel_moisture_linked', models.TextField(blank=True, default='', null=True, verbose_name='Is fuel moisture linked to soil moisture/air humidity/precip?')),
                ('carbon_pools_combusted', models.TextField(blank=True, default='', null=True, verbose_name='Which carbon pools are combusted?')),
                ('combustion_completeness', models.TextField(blank=True, default='', null=True, verbose_name='Is the combustion completeness constant or depends on what (fuel type, moisture?)')),
                ('min_max_burned_area_grid', models.TextField(blank=True, default='', null=True, verbose_name='What is the minimum/maximum burned area fraction at grid cell level? Over which time period? ')),
                ('land_cover_classes_allowed', models.TextField(blank=True, default='', null=True, verbose_name='Land-cover classes allowed to burn')),
                ('burned_area_computed_separately', models.TextField(blank=True, default='', null=True, verbose_name='Is burned area computed separately for each PFT? If not how is burned area separated into the PFT-burned area? ')),
                ('peatland_fires_included', models.TextField(blank=True, default='', null=True, verbose_name='Are peatland fires included?')),
                ('deforestation_or_clearing_included', models.TextField(blank=True, default='', null=True, verbose_name='Are deforestation or land clearing fires included?')),
                ('pastures_represented', models.TextField(blank=True, default='', null=True, verbose_name='How are pastures represented?')),
                ('cropland_burn_differ', models.TextField(blank=True, default='', null=True, verbose_name='If croplands burn, does the fire model differ for this PFT? If yes please describe.')),
                ('pasture_burn_differ', models.TextField(blank=True, default='', null=True, verbose_name='If pastures burn, does the fire model differ for his PFT? If yes, please describe')),
                ('vegetation_fire_mortality', models.TextField(blank=True, default='', null=True, verbose_name='vegetation fire mortality: is it constant/constant per pft/depends on (for instance fire intensity, bark thickness, veg height)')),
                ('impact_model', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='climatemodels.ImpactModel')),
            ],
            options={
                'verbose_name': 'Fire',
                'verbose_name_plural': 'Fires',
            },
        ),
        migrations.AlterField(
            model_name='sector',
            name='class_name',
            field=models.CharField(choices=[('GenericSector', 'Generic Sector'), ('Agriculture', 'Agriculture'), ('Energy', 'Energy'), ('WaterGlobal', 'Water (global)'), ('WaterRegional', 'Water (regional)'), ('Biomes', 'Biomes'), ('Fire', 'Fire'), ('Forests', 'Forests'), ('MarineEcosystemsGlobal', 'Marine Ecosystems and Fisheries (global)'), ('MarineEcosystemsRegional', 'Marine Ecosystems and Fisheries (regional)'), ('Biodiversity', 'Biodiversity'), ('Health', 'Health'), ('CoastalInfrastructure', 'Coastal Infrastructure'), ('Permafrost', 'Permafrost'), ('ComputableGeneralEquilibriumModelling', 'Computable General Equilibrium Modelling'), ('AgroEconomicModelling', 'Agro-Economic Modelling')], default='GenericSector', max_length=500),
        ),
    ]
