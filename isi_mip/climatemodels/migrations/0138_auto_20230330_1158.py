# Generated by Django 3.2.18 on 2023-03-30 09:58

from django.db import migrations, models
import isi_mip.climatemodels.impact_model_blocks
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('climatemodels', '0137_auto_20230302_1102'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='impactmodelquestion',
            options={'ordering': ['step'], 'verbose_name': 'Model Documentation'},
        ),
        migrations.RemoveField(
            model_name='impactmodelquestion',
            name='subheading',
        ),
        migrations.AlterField(
            model_name='impactmodelquestion',
            name='information_type',
            field=models.CharField(blank=True, choices=[('technical_information', 'Resolution information'), ('input_data_information', 'Input data information'), ('other_information', 'Model setup Information'), ('sector_specific_information', 'Sector-specific information')], max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='impactmodelquestion',
            name='questions',
            field=wagtail.fields.StreamField([('fieldset', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(required=False)), ('description', wagtail.blocks.RichTextBlock(required=False)), ('questions', wagtail.blocks.StreamBlock([('single_line', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False))])), ('textarea', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False))])), ('choice', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False)), ('allow_custom', wagtail.blocks.BooleanBlock(required=False)), ('choices', wagtail.blocks.ListBlock(isi_mip.climatemodels.impact_model_blocks.ChoiceBlock))])), ('multiple_choice', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False)), ('choices', wagtail.blocks.ListBlock(isi_mip.climatemodels.impact_model_blocks.ChoiceBlock))])), ('model_multiple_choice', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False)), ('model_choice', wagtail.blocks.ChoiceBlock(choices=[('emissions_data_sets', 'Emissions'), ('land_use_data_sets', 'Land use'), ('observed_atmospheric_climate_data_sets', 'Observed atmospheric climate'), ('other_data_sets', 'Other'), ('other_human_influences_data_sets', 'Other human influences'), ('simulated_atmospheric_climate_data_sets', 'Simulated atmospheric climate'), ('socio_economic_data_sets', 'Socio-economic'), ('simulated_ocean_climate_data_sets', 'Simulated ocean climate'), ('observed_ocean_climate_data_sets', 'Observed ocean climate'), ('climate_variables', 'Climate Variables'), ('model_output', 'Biodiversity Model Output')]))])), ('model_single_choice', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False)), ('allow_custom', wagtail.blocks.BooleanBlock(required=False)), ('model_choice', wagtail.blocks.ChoiceBlock(choices=[('spatial_aggregation', 'Spatial Aggregation')]))])), ('true_false', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='A unique name identifier for the question', required=True)), ('question', wagtail.blocks.TextBlock(help_text='The question you would like to ask', required=True)), ('required', wagtail.blocks.BooleanBlock(help_text='Is the question you are asking mandatory', required=False)), ('help_text', wagtail.blocks.TextBlock(required=False)), ('nullable', wagtail.blocks.BooleanBlock(required=False))]))]))]))], blank=True, null=True, use_json_field=True),
        ),
        migrations.AddConstraint(
            model_name='impactmodelquestion',
            constraint=models.UniqueConstraint(fields=('information_type', 'sector'), name='unique_information_type_sector'),
        ),
    ]
