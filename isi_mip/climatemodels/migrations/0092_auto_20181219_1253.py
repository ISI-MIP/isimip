# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-12-19 11:53
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import isi_mip.climatemodels.models


class Migration(migrations.Migration):

    dependencies = [
        ('climatemodels', '0091_auto_20181211_1534'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='biodiversity',
            options={'verbose_name': 'Biodiversity', 'verbose_name_plural': 'Biodiversity'},
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='additional_info_model_output',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Additional Information about Model output'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='additional_info_parameters',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Additional Information about Parameters'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='additional_information_response_variable',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Additional information about response variable'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='distribution_response_variable',
            field=models.CharField(blank=True, choices=[('Binomial', 'Binomial'), ('Poisson', 'Poisson')], max_length=255, null=True, verbose_name='Distribution of response variable'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='explanatory_variables',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Explanatory variables'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='model_algorithm',
            field=models.CharField(blank=True, choices=[('GAM', 'Generalised Additive Model (GAM)'), ('GBM', 'Generalized Boosted Models (GBM)'), ('RF', 'Random Forest (RF)'), ('MaxEnt', 'Maximum Entropy (MaxEnt)')], max_length=255, null=True, verbose_name='Model algorithm'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='model_output',
            field=models.CharField(blank=True, choices=[('probability of occurrence', 'probability of occurrence'), ('relative probability of occurrence', 'relative probability of occurrence'), ('summed probability of occurrence', 'summed probability of occurrence')], max_length=255, null=True, verbose_name='Model output'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='parameters',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Parameters'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='response_variable',
            field=models.CharField(blank=True, choices=[('absence/presence of species', 'absence/presence of species'), ('species richness of taxon', 'species richness of taxon')], max_length=255, null=True, verbose_name='Response variable'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='software_function',
            field=models.CharField(blank=True, choices=[('gam()', 'gam()'), ('gbm()', 'gbm()'), ('randomForest()', 'randomForest()'), ('maxent()', 'maxent()')], max_length=255, null=True, verbose_name='Software function'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='software_package',
            field=models.CharField(blank=True, choices=[('mgcv', 'mgcv'), ('gbm', 'gbm'), ('dismo', 'dismo'), ('randomForest', 'randomForest')], max_length=255, null=True, verbose_name='Software package'),
        ),
        migrations.AddField(
            model_name='biodiversity',
            name='software_program',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Software program'),
        ),
    ]
