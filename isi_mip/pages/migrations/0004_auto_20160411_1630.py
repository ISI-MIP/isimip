# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-11 14:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import isi_mip.contrib.blocks
import isi_mip.pages.blocks
import modelcluster.fields
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtaildocs.blocks
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailforms', '0003_capitalizeverbose'),
        ('core', '0001_initial'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtailredirects', '0005_capitalizeverbose'),
        ('pages', '0003_auto_20160407_1050'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to this address', max_length=255, verbose_name='to address')),
                ('from_address', models.CharField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('confirmation_text', models.TextField(default='Your registration was submitted')),
                ('top_content', wagtail.wagtailcore.fields.StreamField((('richtext', wagtail.wagtailcore.blocks.RichTextBlock()),))),
                ('bottom_content', wagtail.wagtailcore.fields.StreamField((('richtext', wagtail.wagtailcore.blocks.RichTextBlock()),))),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='newspage',
            name='page_ptr',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='bottom_content',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='confirmation_text',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='from_address',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='subject',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='to_address',
        ),
        migrations.RemoveField(
            model_name='aboutpage',
            name='top_content',
        ),
        migrations.AddField(
            model_name='aboutpage',
            name='content',
            field=wagtail.wagtailcore.fields.StreamField((('columns_1_to_1', wagtail.wagtailcore.blocks.StructBlock((('left_column', wagtail.wagtailcore.blocks.StreamBlock((('rich_text', wagtail.wagtailcore.blocks.RichTextBlock()), ('link', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('picture', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), ('text', wagtail.wagtailcore.blocks.RichTextBlock(required=False)), ('link', wagtail.wagtailcore.blocks.URLBlock(required=False))))), ('embed', wagtail.wagtailembeds.blocks.EmbedBlock())))), ('right_column', wagtail.wagtailcore.blocks.StreamBlock((('rich_text', wagtail.wagtailcore.blocks.RichTextBlock()), ('link', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('picture', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), ('text', wagtail.wagtailcore.blocks.RichTextBlock(required=False)), ('link', wagtail.wagtailcore.blocks.URLBlock(required=False))))), ('embed', wagtail.wagtailembeds.blocks.EmbedBlock())), form_classname='pull-right'))))), ('image', isi_mip.pages.blocks.ImageBlock()), ('pdf', wagtail.wagtailcore.blocks.StructBlock((('file', wagtail.wagtaildocs.blocks.DocumentChooserBlock()), ('description', wagtail.wagtailcore.blocks.CharBlock())))), ('paper', wagtail.wagtailcore.blocks.StructBlock((('picture', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), ('author', wagtail.wagtailcore.blocks.CharBlock()), ('title', wagtail.wagtailcore.blocks.CharBlock()), ('journal', wagtail.wagtailcore.blocks.CharBlock()), ('link', wagtail.wagtailcore.blocks.URLBlock())), template='widgets/page-teaser-wide.html'))), default=''),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='homepage',
            name='content',
            field=wagtail.wagtailcore.fields.StreamField((('row', wagtail.wagtailcore.blocks.StreamBlock((('teaser', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('picture', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('text', wagtail.wagtailcore.blocks.TextBlock(required=True)), ('link', wagtail.wagtailcore.blocks.PageChooserBlock(required=True))))), ('bigteaser', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('subtitle', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('picture', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('text', wagtail.wagtailcore.blocks.RichTextBlock()), ('external_link', wagtail.wagtailcore.blocks.URLBlock(help_text='Will be ignored if an internal link is provided', required=False)), ('internal_link', wagtail.wagtailcore.blocks.PageChooserBlock(help_text='If set, this has precedence over the external link.', required=False)), ('from_date', wagtail.wagtailcore.blocks.DateBlock(required=False)), ('to_date', wagtail.wagtailcore.blocks.DateBlock(required=False))))), ('news', wagtail.wagtailcore.blocks.StructBlock((('blog_index', isi_mip.contrib.blocks.SpecificPageChooserBlock(help_text='Select blog index page.', required=False)), ('title', wagtail.wagtailcore.blocks.CharBlock(help_text='Per default, the title of the blog index will be used.', required=False)), ('entry_count', isi_mip.contrib.blocks.IntegerBlock(help_text='How many blog entries should be displayed?', max_value=5, min_value=1, required=True))))), ('numbers', wagtail.wagtailcore.blocks.StructBlock((('number1', wagtail.wagtailcore.blocks.CharBlock()), ('number2', wagtail.wagtailcore.blocks.CharBlock())))), ('twitter', wagtail.wagtailcore.blocks.StructBlock((('username', wagtail.wagtailcore.blocks.CharBlock(help_text='You will find username and widget_id @ https://twitter.com/settings/widgets/', required=True)), ('widget_id', wagtail.wagtailcore.blocks.CharBlock(required=True)), ('tweet_limit', wagtail.wagtailcore.blocks.CharBlock(max_length=2, required=True)))))))),)),
        ),
        migrations.AlterField(
            model_name='impactmodelspage',
            name='content',
            field=wagtail.wagtailcore.fields.StreamField((('impact_models', wagtail.wagtailcore.blocks.StructBlock((('description', wagtail.wagtailcore.blocks.RichTextBlock()), ('rows_per_page', isi_mip.contrib.blocks.IntegerBlock(default=20, min_value=1, required=True))))), ('news', wagtail.wagtailcore.blocks.StructBlock((('blog_index', isi_mip.contrib.blocks.SpecificPageChooserBlock(help_text='Select blog index page.', required=False)), ('title', wagtail.wagtailcore.blocks.CharBlock(help_text='Per default, the title of the blog index will be used.', required=False)), ('entry_count', isi_mip.contrib.blocks.IntegerBlock(help_text='How many blog entries should be displayed?', max_value=5, min_value=1, required=True))), template='widgets/flat_blog_block.html')))),
        ),
        migrations.AlterField(
            model_name='outcomespage',
            name='papers',
            field=wagtail.wagtailcore.fields.StreamField((('paper', wagtail.wagtailcore.blocks.StructBlock((('picture', wagtail.wagtailimages.blocks.ImageChooserBlock(required=False)), ('author', wagtail.wagtailcore.blocks.CharBlock()), ('title', wagtail.wagtailcore.blocks.CharBlock()), ('journal', wagtail.wagtailcore.blocks.CharBlock()), ('link', wagtail.wagtailcore.blocks.URLBlock())))),)),
        ),
        migrations.AlterField(
            model_name='registerformfield',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='pages.FormPage'),
        ),
        migrations.DeleteModel(
            name='NewsPage',
        ),
    ]
